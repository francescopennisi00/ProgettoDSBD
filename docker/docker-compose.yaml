version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - wheather_network
    restart: always
    volumes:
      - zookeeper_data_volume:/var/lib/zookeeper/data
      - zookeeper_log_volume:/var/lib/zookeeper/log
      - zookeeper_secrets_volume:/etc/zookeeper/secrets

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    expose:
      - "29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - wheather_network
    restart: always
    volumes:
      - kafka_secrets_volume:/etc/kafka/secrets
      - kafka_data_volume:/var/lib/kafka/data

  notifier_mysqlDB:
    image: mysql:5.6
    container_name: notifier_mysqlDB
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: notifier
    volumes:
      - notifier_volume:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - wheather_network
    restart: always

  notifier_service:
    container_name: notifier_service
    build:
      context: ../notifier_service
      dockerfile: Dockerfile
    image: notifier_service_image:1.0
    depends_on:
      - notifier_mysqlDB
      - kafka
    expose:
      - "50000"
    networks:
      - wheather_network
    restart: always

  um_mysqlDB:
    image: mysql:5.6
    container_name: um_mysqlDB
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: um
    volumes:
      - um_volume:/var/lib/mysql
    expose:
      - "3306"
    networks:
      - wheather_network
    restart: always

  um_service:
    container_name: um_service
    build:
      context: ../user_manager_service
      dockerfile: Dockerfile
    image: user_manager_service_image:1.0
    depends_on:
      - um_mysqlDB
    expose:
      - "50001"
    networks:
      - wheather_network
    restart: always

volumes:
  notifier_volume:
  um_volume:
  zookeeper_data_volume:
  zookeeper_log_volume:
  zookeeper_secrets_volume:
  kafka_secrets_volume:
  kafka_data_volume:

networks:
  wheather_network: